name: GitHub CI

on: [push, pull_request]

jobs:
  npm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x, 14.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - run: git config --global core.autocrlf false # this is needed to prevent git changing EOL after cloning on Windows OS
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install with npm
        run: |
          npm install
      - name: Lint code
        run: |
          npm run lint
      - name: Build
        run: |
          npm run build
      - name: Run tests
        run: |
          npm run test:ci
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info     

  yarn:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x, 14.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - run: git config --global core.autocrlf false # this is needed to prevent git changing EOL after cloning on Windows OS
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Init yarn
        run: |
          npm install -g yarn
      - name: Install with yarn
        run: |
          yarn install
      - name: Lint code
        run: |
          yarn lint
      - name: Build
        run: |
          yarn build
      - name: Run tests
        run: |
          yarn test

  release:
    name: Release
    needs: [npm, yarn]
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BOT_PAT }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install with npm
        run: |
          npm install -q
      - name: Build
        run: |
          npm run build
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
